// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import { ethereum, type Bytes, type Address } from "@graphprotocol/graph-ts";

export class Registered extends ethereum.Event {
  get params(): Registered__Params {
    return new Registered__Params(this);
  }
}

export class Registered__Params {
  _event: Registered;

  constructor(event: Registered) {
    this._event = event;
  }

  get uid(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get registerer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get schema(): RegisteredSchemaStruct {
    return changetype<RegisteredSchemaStruct>(this._event.parameters[2].value.toTuple());
  }
}

export class RegisteredSchemaStruct extends ethereum.Tuple {
  get uid(): Bytes {
    return this[0].toBytes();
  }

  get resolver(): Address {
    return this[1].toAddress();
  }

  get revocable(): boolean {
    return this[2].toBoolean();
  }

  get schema(): string {
    return this[3].toString();
  }
}

export class SchemaRegistry extends ethereum.SmartContract {
  static bind(address: Address): SchemaRegistry {
    return new SchemaRegistry("SchemaRegistry", address);
  }
}
